untyped

global function ClObituary_Init

global function Obituary_Print
global function Obituary_Print_Generic
global function Obituary
global function Obituary_GetEntityInfo
global function Obituary_Print_Localized
global function Obituary_SetEnabled
global function Obituary_SetIndexOffset

///	S2's Client Kill Callback
global function AddCallback_OnPlayerKilled

global struct ObituaryCallbackParams
{
        entity victim
		entity attacker
        int damageSourceId
        int scriptDamageType
		bool victimIsOwnedTitan
} 

struct ObituaryData
{
	float startTime
	var	rui
}



struct
{
	array<ObituaryData>		obituaryQueue = []
	bool obituariesEnabled = true
	int indexOffest = 0
	
	///	S2's Client Kill Callback
	array< void functionref( ObituaryCallbackParams ) > onPlayerKilledClientCallbacks
	///
} file

struct ObitEntityInfo
{
	string displayName = ""
	vector displayColor = OBITUARY_COLOR_WEAPON
	string petDisplayName = ""
}

global struct ObitStringData
{
	string attackerName = ""
	string attackerPetName = ""
	string victimName = ""
	string victimPetName = ""
	string weaponLocalizedName = ""
	string attackerLocalizedString = "#OBIT_PLAYER_STRING"
	string victimLocalizedString = "#OBIT_PLAYER_STRING"
	string weaponLocalizedString = "#OBIT_BRACKETED_STRING"
}

global function IsSourceFire



function ClObituary_Init() {}

void function Obituary_Print( string attackerDisplayName, string weaponDisplayName, string victimDisplayName, vector attackerColor, vector weaponColor, vector victimColor, weaponIcon = null, string attackerPetDisplayName = "", string victimPetDisplayName = "" ) {}

void function Obituary_Print_Generic( string localizedEvent, string entityName, vector eventColor, vector nameColor ) {}

function Obituary( entity attacker, string attackerClass, entity victim, int scriptDamageType, int damageSourceId, bool isHeadShot, bool victimIsOwnedTitan = false, bool forceDisplay = false ) {

	string sourceDisplayName = GetObitFromDamageSourceID( damageSourceId )
	
	printt( "------------------------------------------" )
	printt( "Obituary" )
	printt( "    attacker:", attacker )
	printt( "    victim:", victim )
	printt( "    scriptDamageType:", scriptDamageType )
	printt( "    damageSourceId:", damageSourceId )
	printt( "    sourceDisplayName:", sourceDisplayName )
	printt( "------------------------------------------" )
		
	if (victim == GetLocalClientPlayer() && IsSourceFire( sourceDisplayName )) {
		GetLocalClientPlayer().ClientCommand("playvideo hothothot 1 1")
	}
}

ObitEntityInfo function Obituary_GetEntityInfo( entity ent, bool victimIsOwnedTitan = false, damageSourceId = null )
{
	ObitEntityInfo info

	if ( IsValid( ent ) )
	{
		AttackerDisplayNameStruct names = GetAttackerDisplayNamesFromClassname( ent, victimIsOwnedTitan )
		info.displayName = names.attackerName
		info.petDisplayName = names.attackerPetName

		entity localPlayer = GetLocalClientPlayer()

		info.displayColor = localPlayer.GetTeam() == ent.GetTeam() ? OBITUARY_COLOR_FRIENDLY : OBITUARY_COLOR_ENEMY

		if ( !IsWatchingReplay() )
		{
			local entBoss = ent.GetBossPlayer()
			if ( !IsPrivateMatch() && ((ent.IsPlayer() && IsPartyMember( ent )) || ((entBoss != null) && IsPartyMember( entBoss ))) )
				info.displayColor = OBITUARY_COLOR_PARTY

			if ( ent == localPlayer )
				info.displayColor = OBITUARY_COLOR_LOCALPLAYER
			else if ( !ent.IsPlayer() && (entBoss == localPlayer) )
				info.displayColor = OBITUARY_COLOR_LOCALPLAYER
		}
	}
	else if ( damageSourceId != null )
	{
		string name = GetAttackerDisplayNamesDamageSourceId( damageSourceId )
		info.displayColor = OBITUARY_COLOR_ENEMY // Since we can't know if it's an enemy of friendly lets assume enemy.
		info.displayName = name
	}

	return info
}

void function Obituary_Print_Localized( string localizedPrint, vector altColor1 = <255, 255, 255>, vector altColor2 = <255, 255, 255>, vector altColor3 = <255, 255, 255>, vector backgroundColor = <255, 255, 255>, float backgroundAlpha = 0.0 ) {}

void function Obituary_SetEnabled( bool state ) {}

void function Obituary_SetIndexOffset( int offset ) {}

///	S2's Client Kill Callback
void function AddCallback_OnPlayerKilled( void functionref( ObituaryCallbackParams ) callback ) {}


bool function IsSourceFire( string sourceDisplayName ) {
	printt( "------------------------------------------" )
	printt( "IsSourceFire" )
	printt( "------------------------------------------" )

	switch ( sourceDisplayName ) {
		case "Firestar":
		case "T-203 Thermite Launcher":
		case "Flame Core":
			printt( "true" )
			return true
	}
	printt( "false" )
	return false
}
